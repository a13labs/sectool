name: Build and Release

on:
  push:
    tags:
      - "v*" # Trigger on tags that start with 'v'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.7

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build for Linux
        run: |
          go build -o sectool main.go
          zip sectool-${{ steps.get_version.outputs.version }}-$linux-x64.zip sectool
        env:
          GOOS: linux
          GOARCH: amd64

      - name: Build for Windows
        run: |
          go build -o sectool.exe main.go
          zip sectool-${{ steps.get_version.outputs.version }}-windows.zip sectool
        env:
          GOOS: windows
          GOARCH: amd64

      - name: Build for macOS (Intel)
        run: |
          go build -o sectool main.go
          zip sectool-${{ steps.get_version.outputs.version }}-darwin-x64.zip sectool
        env:
          GOOS: darwin
          GOARCH: amd64

      - name: Build for macOS (Apple Silicon)
        run: |
          go build -o sectool main.go
          zip sectool-${{ steps.get_version.outputs.version }}-darwin-arm64.zip sectool
        env:
          GOOS: darwin
          GOARCH: arm64

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            sectool-linux
            sectool-macos
            sectool-windows.exe

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload release assets
        id: upload_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            sectool-${{ steps.get_version.outputs.version }}-$linux-x64.zip
            sectool-${{ steps.get_version.outputs.version }}-windows.zip
            sectool-${{ steps.get_version.outputs.version }}-darwin-x64.zip
            sectool-${{ steps.get_version.outputs.version }}-darwin-arm64.zip
          asset_name: sectool-${{ steps.get_version.outputs.version }}
          asset_content_type: application/octet-stream
